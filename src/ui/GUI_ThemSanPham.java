/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.EventListener;
import java.util.List;

import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import dao.CongDoan_DAO;
import dao.SanPham_DAO;
import entity.SanPham;
import entity.CongDoan;


/**
 *
 * @author CHAU
 */
public class GUI_ThemSanPham extends javax.swing.JFrame implements ActionListener, MouseListener, EventListener {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Creates new form GUI_ThemSanPham
	 */
	public GUI_ThemSanPham() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		pThemSanPham = new javax.swing.JPanel();
		pTieuDe = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		lblChatLieu = new javax.swing.JLabel();
		lblTenSanPham = new javax.swing.JLabel();
		lblMaSanPham = new javax.swing.JLabel();
		lblKieuDang = new javax.swing.JLabel();
		lblSoLuong = new javax.swing.JLabel();
		txtTenSanPham = new javax.swing.JTextField();
		cbboxKieuDang = new javax.swing.JComboBox<>();
		btnThemKieuDang = new javax.swing.JButton();
		txtMaSanPham = new javax.swing.JTextField();
		txtSoLuong = new javax.swing.JTextField();
		lblSoCongDoan = new javax.swing.JLabel();
		cbboxSoCongDoan = new javax.swing.JComboBox<>();
		cbboxChatLieu = new javax.swing.JComboBox<>();
		lblCongDoan = new javax.swing.JLabel();
		spCongDoan = new javax.swing.JScrollPane();
		JTable tableCongDoan = new javax.swing.JTable();
		btnThem = new javax.swing.JButton();
		btnThoat = new javax.swing.JButton();
		btnXoaRong = new javax.swing.JButton();
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setResizable(false);

		pThemSanPham.setBackground(new java.awt.Color(255, 255, 255));

		pTieuDe.setBackground(new java.awt.Color(43, 124, 210));

		jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
		jLabel1.setForeground(new java.awt.Color(255, 255, 255));
		jLabel1.setText("THÊM SẢN PHẨM");

		javax.swing.GroupLayout pTieuDeLayout = new javax.swing.GroupLayout(pTieuDe);
		pTieuDe.setLayout(pTieuDeLayout);
		pTieuDeLayout.setHorizontalGroup(pTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pTieuDeLayout.createSequentialGroup().addGap(283, 283, 283).addComponent(jLabel1)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		pTieuDeLayout.setVerticalGroup(pTieuDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTieuDeLayout.createSequentialGroup()
						.addContainerGap(16, Short.MAX_VALUE).addComponent(jLabel1).addContainerGap()));

		lblChatLieu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
		lblChatLieu.setText("Chất Liệu");

		cbboxChatLieu.setModel(
				new javax.swing.DefaultComboBoxModel<>(new String[] { "Da thuộc", "Da Nhân Tạo", "Da tổng hợp" }));

		lblTenSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
		lblTenSanPham.setText("Tên Sản Phẩm");

		lblMaSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
		lblMaSanPham.setText("Mã Sản Phẩm");

		lblKieuDang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
		lblKieuDang.setText("Kiểu Dáng");

		lblSoLuong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
		lblSoLuong.setText("Số Lượng");

		lblSoCongDoan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
		lblSoCongDoan.setText("Số Công Đoạn:");

		btnThemKieuDang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add (1).png"))); // NOI18N

		cbboxSoCongDoan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4", "5", "6" }));

		lblCongDoan.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
		lblCongDoan.setText("CÔNG ĐOẠN");

		String[] headersForTableCDSP = { "Mã công đoạn", "Tên công đoạn", "Giá", "Số lượng", };
		dataModelForTableCDSP = new DefaultTableModel(headersForTableCDSP, 0);
		spCongDoan.setViewportView(tableCongDoan = new JTable(dataModelForTableCDSP));

		btnThem.setBackground(new java.awt.Color(51, 255, 51));
		btnThem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
		btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/add-user.png"))); // NOI18N
		btnThem.setText("Thêm");
		btnThem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThemActionPerformed(evt);
			}

		});

		btnThoat.setBackground(new java.awt.Color(255, 0, 0));
		btnThoat.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
		btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/x-button.png"))); // NOI18N
		btnThoat.setText("Thoát");
		btnThoat.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThoatActionPerformed(evt);
			}
		});

		btnXoaRong.setBackground(new java.awt.Color(255, 255, 0));
		btnXoaRong.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
		btnXoaRong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/trash.png"))); // NOI18N
		btnXoaRong.setText("Xoá Rỗng");
		btnXoaRong.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnXoaRongActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout pThemSanPhamLayout = new javax.swing.GroupLayout(pThemSanPham);
		pThemSanPham.setLayout(pThemSanPhamLayout);
		pThemSanPhamLayout.setHorizontalGroup(pThemSanPhamLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(pTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
						Short.MAX_VALUE)
				.addGroup(pThemSanPhamLayout.createSequentialGroup().addGroup(pThemSanPhamLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
						.addGroup(pThemSanPhamLayout.createSequentialGroup().addContainerGap(62, Short.MAX_VALUE)
								.addComponent(spCongDoan, javax.swing.GroupLayout.PREFERRED_SIZE, 615,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(javax.swing.GroupLayout.Alignment.LEADING, pThemSanPhamLayout.createSequentialGroup()
								.addGap(29, 29, 29)
								.addGroup(pThemSanPhamLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(lblKieuDang)
										.addComponent(lblSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 83,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(lblMaSanPham))
								.addGap(27, 27, 27)
								.addGroup(pThemSanPhamLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 165,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGroup(pThemSanPhamLayout.createSequentialGroup().addGroup(pThemSanPhamLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
												.addComponent(cbboxKieuDang, 0, javax.swing.GroupLayout.DEFAULT_SIZE,
														Short.MAX_VALUE)
												.addComponent(txtSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 165,
														Short.MAX_VALUE))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(btnThemKieuDang, javax.swing.GroupLayout.DEFAULT_SIZE, 10,
														Short.MAX_VALUE)))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(pThemSanPhamLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(pThemSanPhamLayout.createSequentialGroup()
												.addGroup(pThemSanPhamLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(lblChatLieu).addComponent(lblSoCongDoan))
												.addGap(34, 34, 34)
												.addGroup(pThemSanPhamLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(cbboxChatLieu,
																javax.swing.GroupLayout.PREFERRED_SIZE, 165,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(cbboxSoCongDoan,
																javax.swing.GroupLayout.PREFERRED_SIZE, 165,
																javax.swing.GroupLayout.PREFERRED_SIZE)))
										.addGroup(pThemSanPhamLayout.createSequentialGroup()
												.addComponent(lblTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE,
														125, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE,
														165, javax.swing.GroupLayout.PREFERRED_SIZE)))))
						.addContainerGap(74, Short.MAX_VALUE))
				.addGroup(pThemSanPhamLayout.createSequentialGroup()
						.addGroup(pThemSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(pThemSanPhamLayout.createSequentialGroup().addGap(309, 309, 309)
										.addComponent(lblCongDoan))
								.addGroup(pThemSanPhamLayout.createSequentialGroup().addGap(157, 157, 157)
										.addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 107,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(51, 51, 51)
										.addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 106,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(56, 56, 56).addComponent(btnXoaRong)))
						.addGap(0, 141, Short.MAX_VALUE)));
		pThemSanPhamLayout.setVerticalGroup(pThemSanPhamLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pThemSanPhamLayout.createSequentialGroup()
						.addComponent(pTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(47, 47, 47)
						.addGroup(pThemSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lblMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 27,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(lblTenSanPham)
								.addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(pThemSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(lblKieuDang)
								.addComponent(lblChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 27,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(cbboxChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(btnThemKieuDang, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(cbboxKieuDang, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(pThemSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(pThemSanPhamLayout.createSequentialGroup().addGap(18, 18, 18)
										.addGroup(pThemSanPhamLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(lblSoLuong).addComponent(txtSoLuong,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addGroup(pThemSanPhamLayout.createSequentialGroup().addGap(26, 26, 26)
										.addGroup(pThemSanPhamLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(lblSoCongDoan).addComponent(cbboxSoCongDoan,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))))
						.addGap(32, 32, 32).addComponent(lblCongDoan).addGap(18, 18, 18)
						.addComponent(spCongDoan, javax.swing.GroupLayout.PREFERRED_SIZE, 216,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
						.addGroup(pThemSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(btnThem).addComponent(btnThoat).addComponent(btnXoaRong))
						.addGap(25, 25, 25)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
						.addComponent(pThemSanPham, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 0, 0)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addComponent(pThemSanPham, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(0, 0, Short.MAX_VALUE)));

		pack();
		setLocationRelativeTo(null);
		txtMaSanPham.setEnabled(false);
		cbboxSoCongDoan.addMouseListener(this);
		btnThem.addActionListener(this);
		btnThemKieuDang.addActionListener(this);
		btnThoat.addActionListener(this);
//		tableCongDoan.isRightMouseButton(this);
		getkieuDang();
		getNewID();
		tableCongDoan = new JTable(dataModelForTableCDSP);
		spCongDoan.setViewportView(tableCongDoan);
		tableCongDoan.setRowHeight(35);
		cbxTenCongDoan = new JComboBox<String>();
		ArrayList<String> dsTenCongDoan = new ArrayList<String>();
		CongDoan_DAO congDoan_DAO = new CongDoan_DAO();
		dsTenCongDoan = congDoan_DAO.getTenCongDoan();
		for (String tenCongDoan : dsTenCongDoan) {

			cbxTenCongDoan.addItem(tenCongDoan);
		}

		TableColumn column = tableCongDoan.getColumnModel().getColumn(1);
		column.setCellEditor(new DefaultCellEditor(cbxTenCongDoan));
		DefaultTableCellRenderer rendererTangCa = new DefaultTableCellRenderer();
		rendererTangCa.setToolTipText("Click for combo box");
		column.setCellRenderer(rendererTangCa);
		cbxTenCongDoan.addActionListener(this);
	}// </editor-fold>//GEN-END:initComponents

	private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnThoatActionPerformed

	}// GEN-LAST:event_btnThoatActionPerformed

	private void btnXoaRongActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnXoaRongActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_btnXoaRongActionPerformed

	private void btnThemActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub

	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(GUI_ThemSanPham.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(GUI_ThemSanPham.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(GUI_ThemSanPham.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(GUI_ThemSanPham.class.getName()).log(java.util.logging.Level.SEVERE,
					null, ex);
		}
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new GUI_ThemSanPham().setVisible(true);

			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnThem;
	private javax.swing.JButton btnThoat;
	private javax.swing.JButton btnXoaRong;
	private javax.swing.JButton btnThemKieuDang;
	private javax.swing.JComboBox<String> cbboxSoCongDoan;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel lblChatLieu;
	private javax.swing.JLabel lblCongDoan;
	private javax.swing.JLabel lblKieuDang;
	private javax.swing.JLabel lblMaSanPham;
	private javax.swing.JLabel lblSoCongDoan;
	private javax.swing.JLabel lblSoLuong;
	private javax.swing.JLabel lblTenSanPham;
	private javax.swing.JPanel pThemSanPham;
	private javax.swing.JPanel pTieuDe;
	private javax.swing.JScrollPane spCongDoan;
	public static javax.swing.JComboBox<String> cbboxKieuDang;
	public javax.swing.JComboBox<String> cbxTenCongDoan;

	private javax.swing.JComboBox<String> cbboxChatLieu;
	private javax.swing.JTextField txtMaSanPham;
	private javax.swing.JTextField txtSoLuong;
	private javax.swing.JTextField txtTenSanPham;
	private DefaultTableModel dataModelForTableCDSP;
	public SanPham sanPham;

	public SanPham_DAO sanPham_DAO;
	public CongDoan_DAO congDoan_DAO;
	public CongDoan congDoan;
	

	public void getNewID() {
		SanPham_DAO sp = new SanPham_DAO();
		System.out.println(sp.getSoLuongSP());
		String sp1 = "SP00" + (sp.getSoLuongSP() + 1);
		String sp2 = "SP0" + (sp.getSoLuongSP() + 1);
		for (SanPham sanPham : sp.getAllSanPham()) {
			if (sp.getSoLuongSP() < 10 && !sanPham.getMaSanPham().equalsIgnoreCase(sp1)) {
				txtMaSanPham.setText(sp1);
			} else if (sp.getSoLuongSP() < 10 && sanPham.getMaSanPham().equalsIgnoreCase(sp1)) {
				txtMaSanPham.setText("SP00" + (sp.getSoLuongSP() + 2));
			} else if (sp.getSoLuongSP() > 10 && !sanPham.getMaSanPham().equalsIgnoreCase(sp2)) {
				txtMaSanPham.setText(sp2);
			} else {
				txtMaSanPham.setText("SP0" + (sp.getSoLuongSP() + 2));
			}
		}

	}

	public String taoMaCongDoanTheoSoLuong(int soLuong, String maSP) {
		return "CD" + maSP + "00" + soLuong;
	}

	public static boolean ktraTenNV(String text) {
		String regex = "\\D{3,20}+";
		if (text.matches(regex)) {
			return true;
		}
		return false;
	}

	public boolean validateTenNV() {
		SanPham_DAO sp_DAO = new SanPham_DAO();
		if (txtTenSanPham.getText().length() <= 0) {
			txtTenSanPham.setText("");
			txtTenSanPham.requestFocus();
			JOptionPane.showMessageDialog(this, "Vui lòng nhập tên");
			return false;
		}
		if (!ktraTenNV(txtTenSanPham.getText().toString().trim())) {
			JOptionPane.showMessageDialog(this, "Không nhập số và kí tự đặt biệt");
			return false;
		}

		for (String tenSP : sp_DAO.getTenSP()) {
			if (txtTenSanPham.getText().toString().equalsIgnoreCase(tenSP)) {
				JOptionPane.showMessageDialog(this, "Sản Phẩm đã tồn tại");
				txtTenSanPham.requestFocus();
				return false;
			}
		}
		return true;
	}

	public boolean validateSoLuong() {

		String digit = "\\D+";
		if (txtSoLuong.getText().length() <= 0) {
			JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng");
			txtSoLuong.requestFocus();
			return false;
		} else if (txtSoLuong.getText().toString().matches(digit)) {
			JOptionPane.showMessageDialog(this, "Vui lòng nhập giá trị là số");
			txtSoLuong.requestFocus();
			return false;
		}
		try {
			int soLuong = Integer.parseInt(txtSoLuong.getText().toString());

			if (soLuong < 300 || soLuong > 1000) {
				txtSoLuong.requestFocus();
				JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 300 và nhỏ hơn 1000");
				return false;
			}
		} catch (NumberFormatException ex) { // handle your exception
			JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng");
			return false;
		}

		return true;

	}

//	public boolean validateSoLuongCongDoan() {
//		int row = dataModelForTableCDSP.getRowCount();
//		for (int i = 0; i < row; i++) {
//			if (Integer.parseInt(dataModelForTableCDSP.getValueAt(i, 3).toString()) > 30000
//					|| Integer.parseInt(dataModelForTableCDSP.getValueAt(i, 3).toString()) < 12000) {
//				JOptionPane.showMessageDialog(this, "Giá công đoạn tối đa là 30000 và tối thiểu là 12000");
//				return false;
//			}
//		}
//		return true;
//	}

	private SanPham getSPForAdd() {
		String maSP = txtMaSanPham.getText();
		String tenSP = txtTenSanPham.getText();
		String kieuDang = cbboxKieuDang.getSelectedItem().toString();
		String chatLieu = cbboxChatLieu.getSelectedItem().toString();
		int soLuong = Integer.parseInt(txtSoLuong.getText().toString());
		boolean trangThai = false;
		return new SanPham(maSP, tenSP, kieuDang, chatLieu, soLuong, trangThai);
	}

	private void themSanPham() {

		if (this.validateTenNV() && this.validateSoLuong()) {
			SanPham sp = this.getSPForAdd();
			SanPham_DAO sanPham_DAO = new SanPham_DAO();
			if (sanPham_DAO.create(sp)) {
				JOptionPane.showMessageDialog(this, "Thêm thành công");
			}else {
				return;
			}
		}
	}

	private CongDoan getCongDoan(int soLuongCongDoan) {
		String maCongDoan = (dataModelForTableCDSP.getValueAt(soLuongCongDoan, 0)).toString();
		String tenCongDoan = (dataModelForTableCDSP.getValueAt(soLuongCongDoan, 1)).toString();
		double giaCongDoan = Double.parseDouble(dataModelForTableCDSP.getValueAt(soLuongCongDoan, 2).toString());
		int soLuong = Integer.parseInt(dataModelForTableCDSP.getValueAt(soLuongCongDoan, 3).toString());
		String maSanPham = (txtMaSanPham.getText().toString());
		return new CongDoan(maCongDoan, tenCongDoan, giaCongDoan, soLuong, new SanPham(maSanPham));
	}

	private void themCongDoan() {
		int row = dataModelForTableCDSP.getRowCount();
		congDoan_DAO = new CongDoan_DAO();
//		if (!validateSoLuongCongDoan()) {
		themSanPham();
		for (int i = 0; i < row; i++) {
			{
				CongDoan congDoan = this.getCongDoan(i);
				congDoan_DAO.create(congDoan);
			}
		}

	}

	private void getkieuDang() {
		ArrayList<String> dsKieuDang = new ArrayList<String>();
		SanPham_DAO sanPham_DAO = new SanPham_DAO();
		dsKieuDang = sanPham_DAO.getKieuDang();
		for (String kieuDang : dsKieuDang) {
			cbboxKieuDang.addItem(kieuDang);
		}
	}

	public static void addkieuDang(String kieuDang) {
		cbboxKieuDang.addItem(kieuDang);

	}

//	private void addPopUpMenu() {
//		JPopupMenu popup = new JPopupMenu();
//		popup.add(new JMenuItem("Thêm"));
//		popup.add(new JMenuItem("Xóa"));
//	}

	@Override
	public void mouseClicked(MouseEvent e) {
//		System.out.print(cbxTenCongDoan.getSelectedItem().toString());
//		int row = dataModelForTableCDSP.getRowCount();
//		for (int i = 0; i < row; i++) {
//			tableCongDoan.setValueAt(cbxTenCongDoan.getSelectedItem().toString(), i, 1);
//		}
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseEntered(MouseEvent e) {

	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		Object o = e.getSource();
		try {
			int soLuong = Integer.parseInt(txtSoLuong.getText().toString());

			if (soLuong >= 300 && soLuong <= 600) {
				if (o.equals(cbboxSoCongDoan)) {
					switch (cbboxSoCongDoan.getSelectedItem().toString()) {
					case "4": {
						// "CAP TOE OXFORD","SLIPPER","BOAT","CHUKKA"
						// "Da thuộc", "Da Nhân Tạo", "Da tổng hợp"
						// "Lên Khuôn" "Khâu Dập" "Mai Mũi" "Khâu Đế" "Lót form" "Khâu Lót"
						if (cbboxKieuDang.getSelectedItem().toString().equalsIgnoreCase("CAP TOE OXFORD")) {
							dataModelForTableCDSP.setRowCount(0);
							String[] rowData = { this.taoMaCongDoanTheoSoLuong(1, txtMaSanPham.getText()), "Lên Khuôn",
									"30000", txtSoLuong.getText().toString() };
							dataModelForTableCDSP.addRow(rowData);
							String[] rowData1 = { this.taoMaCongDoanTheoSoLuong(2, txtMaSanPham.getText()), "Khâu Dập",
									"27000", txtSoLuong.getText().toString() };
							dataModelForTableCDSP.addRow(rowData1);
							String[] rowData2 = { this.taoMaCongDoanTheoSoLuong(3, txtMaSanPham.getText()), "Khâu Đế",
									"29000", txtSoLuong.getText().toString() };
							dataModelForTableCDSP.addRow(rowData2);
							String[] rowData3 = { this.taoMaCongDoanTheoSoLuong(4, txtMaSanPham.getText()), "May Mũi",
									"25000", txtSoLuong.getText().toString() };
							dataModelForTableCDSP.addRow(rowData3);
							break;
						}

						else {
							dataModelForTableCDSP.setRowCount(0);
							String[] rowData = { this.taoMaCongDoanTheoSoLuong(1, txtMaSanPham.getText()), "Lên Khuôn",
									"15000", txtSoLuong.getText().toString() };
							dataModelForTableCDSP.addRow(rowData);
							String[] rowData1 = { this.taoMaCongDoanTheoSoLuong(2, txtMaSanPham.getText()), "Khâu Dập",
									"19000", txtSoLuong.getText().toString() };
							dataModelForTableCDSP.addRow(rowData1);
							String[] rowData2 = { this.taoMaCongDoanTheoSoLuong(3, txtMaSanPham.getText()), "Khâu Đế",
									"20000", txtSoLuong.getText().toString() };
							dataModelForTableCDSP.addRow(rowData2);
							String[] rowData3 = { this.taoMaCongDoanTheoSoLuong(4, txtMaSanPham.getText()), "Khâu Lót",
									"17000", txtSoLuong.getText().toString() };
							dataModelForTableCDSP.addRow(rowData3);

							break;
						}

					}
					case "5": {
						dataModelForTableCDSP.setRowCount(0);
						String[] rowData = { this.taoMaCongDoanTheoSoLuong(1, txtMaSanPham.getText()), "Lên Khuôn",
								"25000", txtSoLuong.getText().toString() };
						dataModelForTableCDSP.addRow(rowData);
						String[] rowData1 = { this.taoMaCongDoanTheoSoLuong(2, txtMaSanPham.getText()), "Khâu Dập",
								"22000", txtSoLuong.getText().toString() };
						dataModelForTableCDSP.addRow(rowData1);
						String[] rowData2 = { this.taoMaCongDoanTheoSoLuong(3, txtMaSanPham.getText()), "Khâu Đế",
								"19000", txtSoLuong.getText().toString() };
						dataModelForTableCDSP.addRow(rowData2);
						String[] rowData3 = { this.taoMaCongDoanTheoSoLuong(4, txtMaSanPham.getText()), "Khâu Lót",
								"21000", txtSoLuong.getText().toString() };
						dataModelForTableCDSP.addRow(rowData3);
						String[] rowData4 = { this.taoMaCongDoanTheoSoLuong(5, txtMaSanPham.getText()), "May Mũi",
								"20000", txtSoLuong.getText().toString() };
						dataModelForTableCDSP.addRow(rowData4);
						break;

					}
					case "6": {
						dataModelForTableCDSP.setRowCount(0);
						String[] rowData = { this.taoMaCongDoanTheoSoLuong(1, txtMaSanPham.getText()), "Lên Khuôn",
								"27000", txtSoLuong.getText().toString() };
						dataModelForTableCDSP.addRow(rowData);
						String[] rowData1 = { this.taoMaCongDoanTheoSoLuong(2, txtMaSanPham.getText()), "Khâu Dập",
								"15000", txtSoLuong.getText().toString() };
						dataModelForTableCDSP.addRow(rowData1);
						String[] rowData2 = { this.taoMaCongDoanTheoSoLuong(3, txtMaSanPham.getText()), "Khâu Đế",
								"20000", txtSoLuong.getText().toString() };
						dataModelForTableCDSP.addRow(rowData2);
						String[] rowData3 = { this.taoMaCongDoanTheoSoLuong(4, txtMaSanPham.getText()), "Khâu Lót",
								"15000", txtSoLuong.getText().toString() };
						dataModelForTableCDSP.addRow(rowData3);
						String[] rowData4 = { this.taoMaCongDoanTheoSoLuong(5, txtMaSanPham.getText()), "May Mũi",
								"25000", txtSoLuong.getText().toString() };
						dataModelForTableCDSP.addRow(rowData4);
						String[] rowData5 = { this.taoMaCongDoanTheoSoLuong(6, txtMaSanPham.getText()), "Lót Form",
								"19000", txtSoLuong.getText().toString() };
						dataModelForTableCDSP.addRow(rowData5);
						break;

					}

					}
				}
			}
		} catch (NumberFormatException ex) { // handle your exception
		}

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		Object o = e.getSource();
		if (o.equals(btnThem)) {
			themCongDoan();
		}

		if (o.equals(btnThoat)) {
			super.dispose();
		}
		if (o.equals(btnThemKieuDang)) {
			GUI_ThemKieuDang ui = new GUI_ThemKieuDang();
			ui.setVisible(true);
		}
	}
}
